from pprint import pprint
from numpy import array, diag, diagflat, dot

def jacobi(matrix, b, x, qnt, E):
    matrix_d = diag(matrix)
    matrix_r = matrix  - diagflat(matrix_d)

    for i in range (qnt):
        x = b -dot(matrix_r,x)/ matrix_d
    return x

E = 0.1 # Erro
matrix = array([[6,3,1],[4,9,-3],[1,-1,3]])
b = array([10,16,14])
x = array([-1.8,5.5,7.3]) # Chute Inicial

sol = jacobi(matrix,b,x,25,0)

print ("Matriz Inicial:")
pprint(matrix)

print ("Vetor b:")
pprint(b)

print ("Solução do sistema:")
pprint(sol)
